basePath: /api/v1
definitions:
  handler.AddressRequest:
    properties:
      city:
        type: string
      country:
        type: string
      state:
        type: string
      street:
        type: string
      zip_code:
        type: string
    required:
    - city
    - country
    - state
    - street
    - zip_code
    type: object
  handler.CreateOrderItemRequest:
    properties:
      name:
        type: string
      price:
        type: number
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - name
    - product_id
    type: object
  handler.CreateOrderRequest:
    properties:
      address:
        $ref: '#/definitions/handler.AddressRequest'
      items:
        items:
          $ref: '#/definitions/handler.CreateOrderItemRequest'
        type: array
      user_id:
        type: string
    required:
    - address
    - items
    - user_id
    type: object
  handler.Response:
    properties:
      data: {}
      error:
        type: string
      errors: {}
      success:
        type: boolean
    type: object
  handler.UpdateOrderStatusRequest:
    properties:
      status:
        type: string
    required:
    - status
    type: object
host: localhost:8083
info:
  contact: {}
  description: This is an order service API for eCommerce application
  title: Order Service API
  version: "1.0"
paths:
  /orders:
    post:
      consumes:
      - application/json
      description: Create a new order with items and address
      parameters:
      - description: Order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/handler.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Create a new order
      tags:
      - orders
  /orders/{id}:
    get:
      description: Get order details by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get order by ID
      tags:
      - orders
  /orders/{id}/cancel:
    put:
      description: Cancel an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Cancel order
      tags:
      - orders
  /orders/{id}/status:
    put:
      consumes:
      - application/json
      description: Update the status of an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Status update
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateOrderStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Update order status
      tags:
      - orders
  /orders/user/{user_id}:
    get:
      description: Get orders for a specific user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get user orders
      tags:
      - orders
swagger: "2.0"
